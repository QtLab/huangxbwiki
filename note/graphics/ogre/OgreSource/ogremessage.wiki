一. 消息的产生
	* InputReader --- 从各输入设备读取数据, 由PlatformManager创建, 平台相关, InputReader <-- (GLXInput, SDLInput, Win32Input)
	* InputEvent --- 消息的载体, 输入消息在它的产生正常处理之前发送给 Listeners, 可用 Listeners 和 GuiElement subclasses 拦截消息 
	* InputEvent --> (KeyEvent, MouseEvent)
二. 消息的处理
	* EventListener --- 真正处理消息的地方, EventListener --> (KeyListener, MouseListener, MouseMotionListener)
	* EventTarget --- 处理消息的中介, 所有InputEvent消息处理者的基类, EventTarget处理消息是由各种Listener完成的
三. 消息的传递
	* EventDispatcher: 代理分发消息, 负责把 InputEvent 消息分派给 EventTarget
	* EventProcessor: 获取消息, 维护消息队列, 分发消息 
	* EventProcessor 是一个FrameListener, 调用 EventProcessor::startProcessingEvents(true) 把 EventProcessor 添加到 Root 的FrameListener链表中
	* EventProcessor 又是 EventTarget, 维护所有 Listener 列表. 维护一个 EventTarget列表和 EventDispatcher 列表
四. 消息处理整个过程
	* InputReader --> EventProcessor --> EventDispatcher --> EventTarget --> EventListener
