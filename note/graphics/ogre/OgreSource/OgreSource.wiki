Ogre::Root
	描述: 客户端程序的起点, 管理已保存的配置, logging, 已经访问系统中的其他类. 可通过 Root::getSingleton来访问
	基类: Singleton<Root>, RootAlloc

* 这里使用的内存分配器为nedmalloc
{{{c++
	typedef AllocatedObject<GeneralAllocPolicy> GeneralAllocatedObject
}}}
	* 其中类 AllocatedObjec 使用 GeneralAllocPolicy的allocateBytes方法和deallocateBytes方式重新实现操作符operator new和delete
{{{c++
	typedef CategorisedAllocPolicy<Ogre::MEMCATEGORY_GENERAL> GeneralAllocPolicy;
}}}
	* 其中 Ogre::MEMCATEGORY_GENERAL 表示类别, 在源码里并没有用到该参数, 预留
	* CategorisedAllocPolicy 的基类为 NedPoolingPolicy
	* 类 NedPoolingPolicy 构造函数为私有, 实现了三个静态方法 allocateBytes, deallocateBytes, getMaxAllocationSize
	* 这三个方法都调用了 NedPoolingImpl的对应函数, 具体实现见源码文件 OgreMemoryNedPooling.h, OgreMemoryNedPooling.cpp
